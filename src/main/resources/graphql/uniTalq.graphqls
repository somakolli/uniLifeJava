interface Node{
    id: String
}

interface UniItem {
    id: String
    university: University
}

type University implements Node{
    id: String
    name: String
    location: String
}
#no inheritance in graphql :(
type Comment implements Post{
    id: String
    university: University
    created: Int
    updated: Int
    upvotes: Int
    content: String
    creator: UTUser
    parent: Post
    shortContent: String
    upvoted: Boolean
    hasComments: Boolean
}
type UniSubject implements UniItem{
    id: String
    name: String
    university: University
    description: String
    subscribed: Boolean
    tags: String
    numberOfSubscribers: Int
}
type UniThread implements Post{
    id: String
    university: University
    created: Int
    updated: Int
    upvotes: Int
    content: String
    creator: UTUser
    title: String
    uniSubject: UniSubject
    shortContent: String
    upvoted: Boolean
    hasComments: Boolean
}
interface Post {
    id: String
    university: University
    created: Int
    updated: Int
    upvotes: Int
    content: String
    creator: UTUser
    shortContent: String
    upvoted: Boolean
    hasComments: Boolean
}

type UTUser implements UniItem{
    id: String
    firstName: String
    surName: String
    email: String
    profilePictureUrl: String
    karma: Int
    subscribedSubjects: [UniSubject]
    university: University
    uid: String
}

type Query{
    uniThread(threadId: String!):UniThread
    uniSubjects(universityId: String!, page: Int!, pageSize: Int!, sortDirection: String!, sortProperties: String!):[UniSubject]
    uniThreads(uniSubjectId: String!, page: Int!, pageSize: Int!, sortDirection: String!, sortProperties: String!):[UniThread]
    uniThreadsBySubjectName(uniSubjectName: String!, universityId: String!, page: Int!, pageSize: Int!, sortDirection: String!, sortProperties: String!):[UniThread]
    uniComments(postId: String!, page: Int!, pageSize: Int!, sortDirection: String!, sortProperties: String!):[Comment]
    universities : [University]
    me: UTUser
    uniSubject(uniSubjectId: String!): UniSubject
}

type Mutation{
    writeUniversity(name: String!, location: String!):University
    writeUniSubject(name: String!, universityId: String!, description: String):UniSubject
    writeUniThread(title: String!, uniSubjectName: String!, content: String!, universityId: String!): UniThread
    writeUniComment(postId: String!, content: String!): Comment
    upvote(postId: String!): Post
    setUniversity(universityId: String!): UTUser
    subscribe(subjectId: String!): UniSubject
}
